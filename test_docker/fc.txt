open = (token = '', callback) => {
    const api = `${this.host}/api/v1/connect`;
    request
        .post(api)
        .timeout(3000)
        .send(token ? `token=${token}` : '')

close = (callback) => {
    const api = `${this.host}/api/v1/disconnect`;
    request
        .post(api)

uploadFile = (filename, file, callback) => {
    const api = `${this.host}/api/v1/upload`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .attach('file', file, filename)

requestStatus = () => {
    const api = `${this.host}/api/v1/status?token=${this.token}`;
    request
        .get(api)

uploadGcodeFile = (filename, file, type, callback) => {
    const api = `${this.host}/api/v1/prepare_print`;
    if (type === MACHINE_HEAD_TYPE['3DP'].value) {
        type = '3DP';
    } else if (type === MACHINE_HEAD_TYPE.LASER.value) {
        type = 'Laser';
    } else if (type === MACHINE_HEAD_TYPE.CNC.value) {
        type = 'CNC';
    }
    request
        .post(api)
        .field('token', this.token)
        .field('type', type)
        .attach('file', file, filename)

getGcodeFile = (callback) => {
    const api = `${this.host}/api/v1/print_file?token=${this.token}`;
    request
        .get(api)

uploadFile = (filename, file, callback) => {
    const api = `${this.host}/api/v1/upload`;
    request
        .post(api)
        .timeout(300000)
        .field('token', this.token)
        .attach('file', file, filename)

startGcode = (callback) => {
    const api = `${this.host}/api/v1/start_print`;
    request
        .post(api)
        .timeout(120000)
        .send(`token=${this.token}`)

pauseGcode = (callback) => {
    const api = `${this.host}/api/v1/pause_print`;
    request
        .post(api)
        .timeout(120000)
        .send(`token=${this.token}`)
        
resumeGcode = (callback) => {
    const api = `${this.host}/api/v1/resume_print`;
    request
        .post(api)
        .timeout(120000)
        .send(`token=${this.token}`)
        
stopGcode = (callback) => {
    const api = `${this.host}/api/v1/stop_print`;
    request
        .post(api)
        .timeout(120000)
        .send(`token=${this.token}`)
        
updateNozzleTemperature = (nozzleTemp, callback) => {
    const api = `${this.host}/api/v1/override_nozzle_temperature`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .send(`nozzleTemp=${nozzleTemp}`)

updateBedTemperature = (bedTemperature, callback) => {
    const api = `${this.host}/api/v1/override_bed_temperature`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .send(`heatedBedTemp=${bedTemperature}`)

updateZOffset = (zOffset, callback) => {
    const api = `${this.host}/api/v1/override_z_offset`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .send(`zOffset=${zOffset}`)

updateWorkSpeedFactor = (workSpeedFactor, callback) => {
    const api = `${this.host}/api/v1/override_work_speed`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .send(`workSpeed=${workSpeedFactor}`)
        
updateLaserPower = (laserPower, callback) => {
    const api = `${this.host}/api/v1/override_laser_power`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .send(`laserPower=${laserPower}`)
        
loadFilament = (callback) => {
    const api = `${this.host}/api/v1/filament_load`;
    request
        .post(api)
        .send(`token=${this.token}`)
        
unloadFilament = (callback) => {
    const api = `${this.host}/api/v1/filament_unload`;
    request
        .post(api)
        .send(`token=${this.token}`)
        
getEnclosureStatus = (callback) => {
    const api = `${this.host}/api/v1/enclosure?token=${this.token}`;
    request
        .get(api)
        
setEnclosureLight = (value, callback) => {
    const api = `${this.host}/api/v1/enclosure`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .send(`led=${value}`)
        
setEnclosureFan = (value, callback) => {
    const api = `${this.host}/api/v1/enclosure`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .send(`fan=${value}`)
        
setDoorDetection = (enabled, callback) => {
    const api = `${this.host}/api/v1/enclosure`;
    request
        .post(api)
        .send(`token=${this.token}`)
        .send(`isDoorEnabled=${enabled}`)
